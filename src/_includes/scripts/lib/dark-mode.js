// Provides functionality for switching the color mode of the website between
// regular and dark mode.
(function() {
  var SOURCES = window.TEXT_VARIABLES.sources;
  const LOCAL_STORAGE_NAME = "use_dark_mode";
  window.Lazyload.js(SOURCES.jquery, function() {
    const mainCss = document.getElementById('main-stylesheet');
    // Multiple switches for changing the mode.
    const checkboxes = document.getElementsByClassName('dark-mode-switch');

    // CSS filepaths -- generated by Jekyll.
    {% include snippets/prepend-baseurl.html path='/assets/css/main.css' %}
    const regularCssHref = "{{ __return }}"
    {% include snippets/prepend-baseurl.html path='/assets/css/dark.css' %}
    const darkCssHref = "{{ __return }}"

    // Retrieves the dark mode boolean from local storage.
    function getUseDarkMode() {
      // Either 0 or 1 (note: we get null if the variable was not in local
      // storage, but Number(null) = 0).
      const numericalValue = Number(window.localStorage.getItem(LOCAL_STORAGE_NAME));
      return Boolean(numericalValue);
    }

    function setRegularMode() {
      window.localStorage.setItem(LOCAL_STORAGE_NAME, 0);
      mainCss.href = regularCssHref;
      for(c of checkboxes) c.checked = false;
    }

    function setDarkMode() {
      window.localStorage.setItem(LOCAL_STORAGE_NAME, 1);
      mainCss.href = darkCssHref;
      for(c of checkboxes) c.checked = true;
    }

    // We used to initialize the loading of the dark mode stylesheet here, but
    // that has been moved to load-stylesheet.js. Now, we just initialize the
    // checkboxes.
    if(getUseDarkMode()) {
      for(c of checkboxes) c.checked = true;
    } else {
      for(c of checkboxes) c.checked = false;
    }

    // Clicking on any checkbox flips the mode. We could reload the page to
    // change color theme for Disqus, but this can be annoying for the user,
    // especially when scripts like Katex have to run.
    for(c of checkboxes) {
      c.onchange = function() {
        if(getUseDarkMode()) {
          setRegularMode();
        } else {
          setDarkMode();
        }
      }
    }
  });
})();
